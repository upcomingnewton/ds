<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="fragment" content="!">
  <title>Introduction to String Searching Algorithms  &#8211;  topcoder</title>
  <meta name="description" content="">
  <meta name="author" content="@topcoder" >
  <meta http-equiv="X-UA-Compatible" content="IE=edge"><script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"UgEGVFNbGwYGXVZaBgQ="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o||e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({QJf3ax:[function(t,e){function n(){}function r(t){function e(t){return t&&t instanceof n?t:t?a(t,i,o):o()}function u(n,r,o){t&&t(n,r,o);for(var i=e(o),a=l(n),s=a.length,f=0;s>f;f++)a[f].apply(i,r);var u=c[v[n]];return u&&u.push([w,n,r,i]),i}function d(t,e){m[t]=l(t).concat(e)}function l(t){return m[t]||[]}function p(t){return f[t]=f[t]||r(u)}function h(t,e){s(t,function(t,n){e=e||"feature",v[n]=e,e in c||(c[e]=[])})}var m={},v={},w={on:d,emit:u,get:p,listeners:l,context:e,buffer:h};return w}function o(){return new n}var i="nr@context",a=t("gos"),s=t(1),c={},f={},u=e.exports=r();u.backlog=c},{1:24,gos:"7eSDFh"}],ee:[function(t,e){e.exports=t("QJf3ax")},{}],3:[function(t){function e(t){try{i.console&&console.log(t)}catch(e){}}var n,r=t("ee"),o=t(1),i={};try{n=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(i.console=!0,-1!==n.indexOf("dev")&&(i.dev=!0),-1!==n.indexOf("nr_dev")&&(i.nrDev=!0))}catch(a){}i.nrDev&&r.on("internal-error",function(t){e(t.stack)}),i.dev&&r.on("fn-err",function(t,n,r){e(r.stack)}),i.dev&&(e("NR AGENT IN DEVELOPMENT MODE"),e("flags: "+o(i,function(t){return t}).join(", ")))},{1:24,ee:"QJf3ax"}],4:[function(t){function e(t,e,n,i,a){try{f?f-=1:r("err",[a||new UncaughtException(t,e,n)])}catch(c){try{r("ierr",[c,(new Date).getTime(),!0])}catch(u){}}return"function"==typeof s?s.apply(this,o(arguments)):!1}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function n(t){r("err",[t,(new Date).getTime()])}var r=t("handle"),o=t(6),i=t("ee"),a=t("loader"),s=window.onerror,c=!1,f=0;a.features.err=!0,t(5),window.onerror=e;try{throw new Error}catch(u){"stack"in u&&(t(1),t(2),"addEventListener"in window&&t(3),a.xhrWrappable&&t(4),c=!0)}i.on("fn-start",function(){c&&(f+=1)}),i.on("fn-err",function(t,e,r){c&&(this.thrown=!0,n(r))}),i.on("fn-end",function(){c&&!this.thrown&&f>0&&(f-=1)}),i.on("internal-error",function(t){r("ierr",[t,(new Date).getTime(),!0])})},{1:10,2:9,3:7,4:11,5:3,6:25,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],5:[function(t){t("loader").features.ins=!0},{loader:"G9z0Bl"}],6:[function(t){function e(){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var n=t("ee"),r=t("handle"),o=t(1),i=t(2);t("loader").features.stn=!0,t(3);var a=NREUM.o.EV;n.on("fn-start",function(t){var e=t[0];e instanceof a&&(this.bstStart=Date.now())}),n.on("fn-end",function(t,e){var n=t[0];n instanceof a&&r("bst",[n,e,this.bstStart,Date.now()])}),o.on("fn-start",function(t,e,n){this.bstStart=Date.now(),this.bstType=n}),o.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),this.bstType])}),i.on("fn-start",function(){this.bstStart=Date.now()}),i.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),"requestAnimationFrame"])}),n.on("pushState-start",function(){this.time=Date.now(),this.startPath=location.pathname+location.hash}),n.on("pushState-end",function(){r("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),"addEventListener"in window.performance&&(window.performance.clearResourceTimings?window.performance.addEventListener("resourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.clearResourceTimings()},!1):window.performance.addEventListener("webkitresourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.webkitClearResourceTimings()},!1)),document.addEventListener("scroll",e,!1),document.addEventListener("keypress",e,!1),document.addEventListener("click",e,!1)}},{1:10,2:9,3:8,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],7:[function(t,e){function n(t){for(var e=t;e&&!e.hasOwnProperty("addEventListener");)e=Object.getPrototypeOf(e);e&&r(e)}function r(t){a.inPlace(t,["addEventListener","removeEventListener"],"-",o)}function o(t){return t[1]}var i=t("ee").get("events"),a=t(1)(i),s=t("gos");e.exports=i,r(window),"getPrototypeOf"in Object?(n(document),n(XMLHttpRequest.prototype)):XMLHttpRequest.prototype.hasOwnProperty("addEventListener")&&r(XMLHttpRequest.prototype),i.on("addEventListener-start",function(t){if(t[1]){var e=t[1];if("function"==typeof e){var n=s(e,"nr@wrapped",function(){return a(e,"fn-",null,e.name||"anonymous")});this.wrapped=t[1]=n}else"function"==typeof e.handleEvent&&a.inPlace(e,["handleEvent"],"fn-")}}),i.on("removeEventListener-start",function(t){var e=this.wrapped;e&&(t[1]=e)})},{1:26,ee:"QJf3ax",gos:"7eSDFh"}],8:[function(t,e){var n=t("ee").get("history"),r=t(1)(n);e.exports=n,r.inPlace(window.history,["pushState","replaceState"],"-")},{1:26,ee:"QJf3ax"}],9:[function(t,e){var n=t("ee").get("raf"),r=t(1)(n);e.exports=n,r.inPlace(window,["requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame"],"raf-"),n.on("raf-start",function(t){t[0]=r(t[0],"fn-")})},{1:26,ee:"QJf3ax"}],10:[function(t,e){function n(t,e,n){t[0]=i(t[0],"fn-",null,n)}function r(t,e,n){this.method=n,this.timerDuration="number"==typeof t[1]?t[1]:0,t[0]=i(t[0],"fn-",this,n)}var o=t("ee").get("timer"),i=t(1)(o);e.exports=o,i.inPlace(window,["setTimeout","setImmediate"],"setTimer-"),i.inPlace(window,["setInterval"],"setInterval-"),i.inPlace(window,["clearTimeout","clearImmediate"],"clearTimeout-"),o.on("setInterval-start",n),o.on("setTimer-start",r)},{1:26,ee:"QJf3ax"}],11:[function(t,e){function n(t,e){e=e||this;var n=i.context(e);e.readyState>3&&!n.resolved&&(n.resolved=!0,i.emit("xhr-resolved",[],e));try{c.inPlace(e,l,"fn-",r)}catch(o){}}function r(t,e){return e}function o(t,e){for(var n in t)e[n]=t[n];return e}var i=t("ee").get("xhr"),a=t(1),s=t(2),c=s(i),f=s(a),u=NREUM.o,d=u.XHR,l=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout","onreadystatechange"];e.exports=i,window.XMLHttpRequest=function(t){var e=new d(t);try{i.emit("new-xhr",[e],e),e.hasOwnProperty("addEventListener")&&f.inPlace(e,["addEventListener","removeEventListener"],"-",r),e.addEventListener("readystatechange",n,!1)}catch(o){try{i.emit("internal-error",[o])}catch(a){}}return e},o(d,XMLHttpRequest),XMLHttpRequest.prototype=d.prototype,c.inPlace(XMLHttpRequest.prototype,["open","send"],"-xhr-",r),i.on("send-xhr-start",n),i.on("open-xhr-start",n)},{1:7,2:26,ee:"QJf3ax"}],12:[function(t){function e(t){var e=this.params,r=this.metrics;if(!this.ended){this.ended=!0;for(var o=0;u>o;o++)t.removeEventListener(f[o],this.listener,!1);if(!e.aborted){if(r.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var i=n(t,this.lastSize);if(i&&(r.rxSize=i),this.sameOrigin){var s=t.getResponseHeader("X-NewRelic-App-Data");s&&(e.cat=s.split(", ").pop())}}else e.status=0;r.cbTime=this.cbTime,c.emit("xhr-done",[t],t),a("xhr",[e,r,this.startTime])}}}function n(t,e){var n=t.responseType;if("json"===n&&null!==e)return e;var o="arraybuffer"===n||"blob"===n||"json"===n?t.response:t.responseText;return r(o)}function r(t){if("string"==typeof t&&t.length)return t.length;if("object"!=typeof t)return void 0;if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if("undefined"!=typeof FormData&&t instanceof FormData)return void 0;try{return JSON.stringify(t).length}catch(e){return void 0}}function o(t,e){var n=s(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}var i=t("loader");if(i.xhrWrappable){var a=t("handle"),s=t(2),c=t("ee"),f=["load","error","abort","timeout"],u=f.length,d=t(1),l=t(3),p=window.XMLHttpRequest;i.features.xhr=!0,t(5),t(4),c.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=e,n.ended=!1,n.xhrGuids={},n.lastSize=null,l&&(l>34||10>l)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),c.on("open-xhr-start",function(t){this.params={method:t[0]},o(this,t[1]),this.metrics={}}),c.on("open-xhr-end",function(t,e){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),c.on("send-xhr-start",function(t,e){var n=this.metrics,o=t[0],i=this;if(n&&o){var a=r(o);a&&(n.txSize=a)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&&(i.params.aborted=!0),("load"!==t.type||i.called===i.totalCbs&&(i.onloadCalled||"function"!=typeof e.onload))&&i.end(e)}catch(n){try{c.emit("internal-error",[n])}catch(r){}}};for(var s=0;u>s;s++)e.addEventListener(f[s],this.listener,!1)}),c.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof n.onload||this.end(n)}),c.on("xhr-load-added",function(t,e){var n=""+d(t)+!!e;this.xhrGuids&&!this.xhrGuids[n]&&(this.xhrGuids[n]=!0,this.totalCbs+=1)}),c.on("xhr-load-removed",function(t,e){var n=""+d(t)+!!e;this.xhrGuids&&this.xhrGuids[n]&&(delete this.xhrGuids[n],this.totalCbs-=1)}),c.on("addEventListener-end",function(t,e){e instanceof p&&"load"===t[0]&&c.emit("xhr-load-added",[t[1],t[2]],e)}),c.on("removeEventListener-end",function(t,e){e instanceof p&&"load"===t[0]&&c.emit("xhr-load-removed",[t[1],t[2]],e)}),c.on("fn-start",function(t,e,n){e instanceof p&&("onload"===n&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=(new Date).getTime()))}),c.on("fn-end",function(t,e){this.xhrCbStart&&c.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{1:"XL7HBI",2:13,3:15,4:11,5:7,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],13:[function(t,e){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!e.protocol||":"===e.protocol||e.protocol===n.protocol,a=e.hostname===document.domain&&e.port===n.port;return r.sameOrigin=i&&(!e.hostname||a),r}},{}],14:[function(t,e){function n(t,e){return function(){r(t,[(new Date).getTime()].concat(i(arguments)),null,e)}}var r=t("handle"),o=t(1),i=t(2);"undefined"==typeof window.newrelic&&(newrelic=NREUM);var a=["setPageViewName","addPageAction","setCustomAttribute","finished","addToTrace","inlineHit"],s=["addPageAction"],c="api-";o(a,function(t,e){newrelic[e]=n(c+e,"api")}),o(s,function(t,e){newrelic[e]=n(c+e)}),e.exports=newrelic,newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),r("err",[t,(new Date).getTime()])}},{1:24,2:25,handle:"D5DuLP"}],15:[function(t,e){var n=0,r=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);r&&(n=+r[1]),e.exports=n},{}],gos:[function(t,e){e.exports=t("7eSDFh")},{}],"7eSDFh":[function(t,e){function n(t,e,n){if(r.call(t,e))return t[e];var o=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,e,{value:o,writable:!0,enumerable:!1}),o}catch(i){}return t[e]=o,o}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],handle:[function(t,e){e.exports=t("D5DuLP")},{}],D5DuLP:[function(t,e){function n(t,e,n,o){r.buffer([t],o),r.emit(t,e,n)}var r=t("ee").get("handle");e.exports=n,n.ee=r},{ee:"QJf3ax"}],XL7HBI:[function(t,e){function n(t){var e=typeof t;return!t||"object"!==e&&"function"!==e?-1:t===window?0:i(t,o,function(){return r++})}var r=1,o="nr@id",i=t("gos");e.exports=n},{gos:"7eSDFh"}],id:[function(t,e){e.exports=t("XL7HBI")},{}],G9z0Bl:[function(t,e){function n(){if(!h++){var t=p.info=NREUM.info,e=f.getElementsByTagName("script")[0];if(t&&t.licenseKey&&t.applicationID&&e){s(d,function(e,n){t[e]||(t[e]=n)});var n="https"===u.split(":")[0]||t.sslForHttp;p.proto=n?"https://":"http://",a("mark",["onload",i()],null,"api");var r=f.createElement("script");r.src=p.proto+t.agent,e.parentNode.insertBefore(r,e)}}}function r(){"complete"===f.readyState&&o()}function o(){a("mark",["domContent",i()],null,"api")}function i(){return(new Date).getTime()}var a=t("handle"),s=t(1),c=window,f=c.document;NREUM.o={ST:setTimeout,XHR:c.XMLHttpRequest,REQ:c.Request,EV:c.Event,PR:c.Promise,MO:c.MutationObserver},t(2);var u=(""+location).split("?")[0],d={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-885.min.js"},l=window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent),p=e.exports={offset:i(),origin:u,features:{},xhrWrappable:l};f.addEventListener?(f.addEventListener("DOMContentLoaded",o,!1),c.addEventListener("load",n,!1)):(f.attachEvent("onreadystatechange",r),c.attachEvent("onload",n)),a("mark",["firstbyte",i()],null,"api");var h=0},{1:24,2:14,handle:"D5DuLP"}],loader:[function(t,e){e.exports=t("G9z0Bl")},{}],24:[function(t,e){function n(t,e){var n=[],o="",i=0;for(o in t)r.call(t,o)&&(n[i]=e(o,t[o]),i+=1);return n}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],25:[function(t,e){function n(t,e,n){e||(e=0),"undefined"==typeof n&&(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(0>o?0:o);++r<o;)i[r]=t[e+r];return i}e.exports=n},{}],26:[function(t,e){function n(t){return!(t&&"function"==typeof t&&t.apply&&!t[i])}var r=t("ee"),o=t(1),i="nr@original",a=Object.prototype.hasOwnProperty,s=!1;e.exports=function(t){function e(t,e,r,a){function nrWrapper(){var n,i,s,c;try{i=this,n=o(arguments),s="function"==typeof r?r(n,i):r||{}}catch(u){d([u,"",[n,i,a],s])}f(e+"start",[n,i,a],s);try{return c=t.apply(i,n)}catch(l){throw f(e+"err",[n,i,l],s),l}finally{f(e+"end",[n,i,c],s)}}return n(t)?t:(e||(e=""),nrWrapper[i]=t,u(t,nrWrapper),nrWrapper)}function c(t,r,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<r.length;c++)s=r[c],a=t[s],n(a)||(t[s]=e(a,f?s+o:o,i,s))}function f(e,n,r){if(!s){s=!0;try{t.emit(e,n,r)}catch(o){d([o,e,n,r])}s=!1}}function u(t,e){if(Object.defineProperty&&Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){d([r])}for(var o in t)a.call(t,o)&&(e[o]=t[o]);return e}function d(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=r),e.inPlace=c,e.flag=i,e}},{1:25,ee:"QJf3ax"}]},{},["G9z0Bl",4,12,6,5]);</script>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0" />
  <meta name="apple-mobile-web-app-capable" content="yes" />

  <!-- Favicons -->
  <link rel="shortcut icon" href="https://www.topcoder.com/wp-content/themes/tcs-responsive/favicon.ico" />

    <!-- External JS -->
  <!--[if lt IE 9]>
  <script src="/js/html5shiv.js" type="text/javascript"></script>
  <script src="/js/respond.min.js" type="text/javascript"></script>
  <script src="/js/modernizr.js" type="text/javascript"></script>
  <link rel = "stylesheet" href = "/css/ie.css ? v = 201407282" / >
  <![endif]-->
  <script type="text/javascript">
    var wpUrl = "https://www.topcoder.com";
    var tcApiRUL = 'https://api.topcoder.com/v2';
    var myFiltersURL = '//lc1-user-settings-service.herokuapp.com';
    var siteURL = 'https://www.topcoder.com';
    var communityURL = '//community.topcoder.com';
    var base_url = 'https://www.topcoder.com/wp-content/themes/tcs-responsive';
    var stylesheet_dir = 'https://www.topcoder.com/wp-content/themes/tcs-responsive/css';
    var autoRegister = '';
    var timezone_string = "America/New_York";
    var challengeType;
    var cbApiURL = 'https://coderbits.com';
  </script>

<link rel='stylesheet' id='layerslider-css'  href='https://www.topcoder.com/wp-content/plugins/LayerSlider/static/css/layerslider.css?ver=5.4.0' type='text/css' media='all' />
<link rel='stylesheet' id='ls-google-fonts-css'  href='https://fonts.googleapis.com/css?family=Lato:100,300,regular,700,900%7COpen+Sans:300%7CIndie+Flower:regular%7COswald:300,regular,700&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='tchook-style-css'  href='https://www.topcoder.com/wp-content/plugins/TcApi-hookup/includes/css/tcapi.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='tchook-selectyze-style-css'  href='https://www.topcoder.com/wp-content/plugins/TcApi-hookup/includes/css/Selectyze.jquery.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='advanced-responsive-video-embedder-css'  href='https://www.topcoder.com/wp-content/plugins/advanced-responsive-video-embedder/public/advanced-responsive-video-embedder-public.css?ver=6.1.2' type='text/css' media='all' />
<link rel='stylesheet' id='responsive-lightbox-fancybox-css'  href='https://www.topcoder.com/wp-content/plugins/responsive-lightbox/assets/fancybox/jquery.fancybox-1.3.4.css?ver=1.5.7' type='text/css' media='all' />
<link rel='stylesheet' id='wp-syntax-css-css'  href='https://www.topcoder.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0' type='text/css' media='all' />
<link rel='stylesheet' id='default-css'  href='https://www.topcoder.com/mf/dist/css/default.min.css?ver=3.9.1' type='text/css' media='all' />
<link rel='stylesheet' id='page-list-style-css'  href='https://www.topcoder.com/wp-content/plugins/page-list/css/page-list.css?ver=4.2' type='text/css' media='all' />
<!-- This site uses the Yoast Google Analytics plugin v5.2.7 - Universal enabled - https://yoast.com/wordpress/plugins/google-analytics/ -->
<script type="text/javascript">
	(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
		(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
		m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	})(window,document,'script','//www.google-analytics.com/analytics.js','__gaTracker');

	__gaTracker('create', 'UA-6340959-1', 'auto');
	__gaTracker('set', 'forceSSL', true);
	__gaTracker('require', 'displayfeatures');
	__gaTracker('send','pageview');

</script>
<!-- / Yoast Google Analytics --><script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/LayerSlider/static/js/greensock.js?ver=1.11.8'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js?ver=3.9.1'></script>
<script>window.jQuery || document.write('<script src="https://www.topcoder.com/wp-content/themes/tcs-responsive/js/vendor/jquery/jquery.js"><\/script>')</script>
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/LayerSlider/static/js/layerslider.kreaturamedia.jquery.js?ver=5.4.0'></script>
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/LayerSlider/static/js/layerslider.transitions.js?ver=5.4.0'></script>
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/responsive-lightbox/assets/fancybox/jquery.fancybox-1.3.4.js?ver=1.5.7'></script>
<script type='text/javascript'>
/* <![CDATA[ */
var rlArgs = {"script":"fancybox","selector":"lightbox","customEvents":"","activeGalleries":"0","modal":"0","showOverlay":"1","showCloseButton":"1","enableEscapeButton":"1","hideOnOverlayClick":"1","hideOnContentClick":"0","cyclic":"0","showNavArrows":"1","autoScale":"1","scrolling":"yes","centerOnScroll":"1","opacity":"1","overlayOpacity":"70","overlayColor":"#666","titleShow":"1","titlePosition":"outside","transitions":"fade","easings":"swing","speeds":"300","changeSpeed":"300","changeFade":"100","padding":"5","margin":"5","videoWidth":"1080","videoHeight":"720"};
/* ]]> */
</script>
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/responsive-lightbox/js/front.js?ver=1.5.7'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.topcoder.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.topcoder.com/wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Binary Indexed Trees' href='https://www.topcoder.com/community/data-science/data-science-tutorials/binary-indexed-trees/' />
<link rel='next' title='Maximum Flow: Augmenting Path Algorithms Comparison' href='https://www.topcoder.com/community/data-science/data-science-tutorials/maximum-flow-augmenting-path-algorithms-comparison/' />
<meta name="generator" content="WordPress 3.9.1" />
<link rel='shortlink' href='https://www.topcoder.com/?p=15656' />
<meta name="google-site-verification" content="UA-6340959-1" />
<meta name="google-publisher-plugin-pagetype" content="page"><meta name="google-site-verification" content="13nbPcn6VRWD2zdq-CEG0LbT00aOwSyhofA3OAEmbEI" /><meta name="google-site-verification" content="13nbPcn6VRWD2zdq-CEG0LbT00aOwSyhofA3OAEmbEI" /><meta name="google-site-verification" content="13nbPcn6VRWD2zdq-CEG0LbT00aOwSyhofA3OAEmbEI" /><meta name="google-site-verification" content="p0OVxcrMQ2HYDsGgaRLRS9bsXuXmjKVcTGZnXNphIUI" />	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
  <style>
    .btn, a.btn, .blogCategoryMenu a, .searchBox input, .subscribeBox input {
      behavior: url("https://www.topcoder.com/wp-content/themes/tcs-responsive/css/PIE.htc");
    }
  </style>

</head>

<body>


<div id="wrapper" class="tcssoUsingJS">
<div class="ng-header-bootstrap"></div>
<!-- Bugfix: I-108496 hidden element needed for non-firefox browsers to detect cache-persist status of page, used for above code to display member details -->
<input type='hidden' id='cache-persist'>
  <!-- /#header -->

<script type="text/javascript">
	var siteurl = "https://www.topcoder.com";
</script>
<div class="content">
	<div id="main">

		<!-- Start Overview Page-->
		<div class="pageTitleWrapper">
			<div class="pageTitle container">
				<h2 class="overviewPageTitle IntroductiontoStringSearchingAlgorithmsPageTitle">Introduction to String Searching Algorithms</h2>
			</div>
		</div>




		<article id="mainContent" class="splitLayout overviewPage">
			<div class="container">
				<div class="rightSplit  grid-3-3">
					<div class="mainStream postContent pageContent grid-2-3">

						   <h3>Rabin-Karp and Knuth-Morris-Pratt
    Algorithms</h3>


    <p>
        By&nbsp;<strong><a class="tc_coder coder" href="https://www.topcoder.com/member-profile/TheLlama" style="color: #DDCC00">TheLlama</a></strong>&#8211; <em>TopCoder Member</em>
<br /><a href="http://apps.topcoder.com/forums/?module=ThreadList&#038;forumID=516215">Discuss the article in the forums</a>
    </p>

    <p>The fundamental string searching (matching) problem is defined as
    follows: given two strings &#8211; a text and a pattern, determine whether the
    pattern appears in the text. The problem is also known as &#8220;the needle in a
    haystack problem.&#8221;</p>

    <p><span class="bodySubtitle">The &#8220;Naive&#8221; Method</span><br />
    Its idea is straightforward &#8212; for every position in the text, consider it
    a starting position of the pattern and see if you get a match.</p>
    <pre class="code">
function brute_force(text[], pattern[]) 
{
  // let n be the size of the text and m the size of the
  // pattern

  for(i = 0; i &lt; n; i++) {
    for(j = 0; j &lt; m &amp;&amp; i + j &lt; n; j++) 
      if(text[i + j] != pattern[j]) break;
      // mismatch found, break the inner loop
    if(j == m) // match found
  }
}
</pre>

    <p>The &#8220;naive&#8221; approach is easy to understand and implement but it can be
    too slow in some cases. If the length of the text is n and the length of
    the pattern m, in the worst case it may take as much as (n * m) iterations
    to complete the task.</p>

    <p>It should be noted though, that for most practical purposes, which deal
    with texts based on human languages, this approach is much faster since the
    inner loop usually quickly finds a mismatch and breaks. A problem arises
    when we are faced with different kinds of &#8220;texts,&#8221; such as the genetic
    code.</p>

    <p><span class="bodySubtitle">Rabin-Karp Algorithm (RK)</span><br />
    This is actually the &#8220;naive&#8221; approach augmented with a powerful programming
    technique &#8211; the hash function.</p>

    <p>Every string s[] of length m can be seen as a number H written in a
    positional numeral system in base B (B &gt;= size of the alphabet used in
    the string):</p>

    <p><strong>H = s[0] * B<sup>(m &#8211; 1)</sup> + s[1] * B<sup>(m &#8211; 2)</sup> + …
    + s[m - 2] * B<sup>1</sup> + s[m - 1] * B<sup>0</sup></strong></p>

    <p>If we calculate the number H (the hash value) for the pattern and the
    same number for every substring of length m of the text than the inner loop
    of the &#8220;naive&#8221; method will disappear &#8211; instead of comparing two strings
    character by character we will have just to compare two integers.</p>

    <p>A problem arises when m and B are big enough and the number H becomes
    too large to fit into the standard integer types. To overcome this, instead
    of the number H itself we use its remainder when divided by some other
    number M. To get the remainder we do not have to calculate H. Applying the
    basic rules of modular arithmetic to the above expression:</p>

    <p><strong>A + B = C =&gt; (A % M + B % M) % M = C % M<br />
    A * B = C =&gt; ((A % M) * (B % M)) % M = C % M</strong></p>

    <p>We get:</p>

    <p><strong>H % M = (((s[0] % M) * (B<sup>(m &#8211; 1)</sup> % M)) % M + ((s[1] %
    M) * (B<sup>(m &#8211; 2)</sup> % M)) % M +…<br />
    …+ ((s[m - 2] % M) * (B<sup>1</sup> % M)) % M + ((s[m - 1] % M) *
    (B<sup>0</sup> % M)) % M) % M</strong></p>

    <p>The drawback of using remainders is that it may turn out that two
    different strings map to the same number (it is called a collision). This
    is less likely to happen if M is sufficiently large and B and M are prime
    numbers. Still this does not allow us to entirely skip the inner loop of
    the &#8220;naive&#8221; method. However, its usage is significantly limited. We have to
    compare the &#8220;candidate&#8221; substring of the text with the pattern character by
    character only when their hash values are equal.</p>

    <p>Obviously the approach described so far would be absolutely useless if
    we were not able to calculate the hash value for every substring of length
    m in the text in just one pass through the entire text. At first glance to
    do these calculations we will again need two nested loops: an outer one &#8211;
    to iterate through all possible starting positions &#8212; and an inner one &#8211;
    to calculate the hash function for every starting position. Fortunately,
    this is not the case. Let&#8217;s consider a string s[], and let&#8217;s suppose we are
    to calculate the hash value for every substring in s[] with length say m =
    3. It is easy to see that:</p>

    <p><strong>H<sub>0</sub> = H<sub>s[0]…s[2]</sub> = s[0] * B<sup>2</sup> +
    s[1] * B + s[2]</strong></p>

    <p><strong>H<sub>1</sub> = H<sub>s[1]..s[3]</sub> = s[1] * B<sup>2</sup> +
    s[2] * B + s[3]</strong></p>

    <p><strong>H<sub>1</sub> = (H<sub>0</sub> &#8211; s[0] * B<sup>2</sup> ) * B +
    s[3]</strong></p>

    <p>In general:</p>

    <p><strong>H<sub>i</sub> = ( H<sub>i &#8211; 1</sub> &#8211; s[i- 1] * B<sup>m -
    1</sup> ) * B + s[i + m - 1]</strong></p>

    <p>Applying again the rules of modular arithmetic, we get:</p>

    <p><strong>H<sub>i</sub> % M = (((( H<sub>i &#8211; 1</sub> % M &#8211; ((s[i- 1] % M)
    * (B<sup>m &#8211; 1</sup> % M)) % M ) % M) * (B % M)) % M +<br />
    + s[i + m - 1] % M) % M</strong></p>

    <p>Obviously the value of (H<sub>i &#8211; 1</sub> &#8211; s[i - 1] * B<sup>m -
    1</sup>) may be negative. Again, the rules of modular arithmetic come into
    play:</p>

    <p><strong>A &#8211; B = C =&gt; (A % M &#8211; B % M + k * M) % M = C % M</strong></p>

    <p>Since the absolute value of (H<sub>i &#8211; 1</sub> &#8211; s[i - 1] * B<sup>m -
    1</sup>) is between 0 and (M &#8211; 1), we can safely use a value of 1 for
    k.</p>

    <p>Pseudocode for RK follows:</p>
    <pre class="code">
// correctly calculates a mod b even if a &lt; 0
function int_mod(int a, int b)
{
  return (a % b + b) % b;
}

function Rabin_Karp(text[], pattern[])
{
  // let n be the size of the text, m the size of the
  // pattern, B - the base of the numeral system,
  // and M - a big enough prime number

  if(n &lt; m) return; // no match is possible

  // calculate the hash value of the pattern
  hp = 0;
  for(i = 0; i &lt; m; i++) 
    hp = int_mod(hp * B + pattern[i], M);

  // calculate the hash value of the first segment 
  // of the text of length m
  ht = 0;
  for(i = 0; i &lt; m; i++) 
    ht = int_mod(ht * B + text[i], M);

  if(ht == hp) check character by character if the first
               segment of the text matches the pattern;

  // start the "rolling hash" - for every next character in
  // the text calculate the hash value of the new segment
  // of length m; E = (Bm-1) modulo M            
  for(i = m; i &lt; n; i++) {
    ht = int_mod(ht - int_mod(text[i - m] * E, M), M);
    ht = int_mod(ht * B, M);
    ht = int_mod(ht + text[i], M);

    if(ht == hp) check character by character if the
                 current segment of the text matches
                 the pattern; 
  }
}
</pre>

    <p>Unfortunately, there are still cases when we will have to run the entire
    inner loop of the &#8220;naive&#8221; method for every starting position in the text &#8211;
    for example, when searching for the pattern &#8220;aaa&#8221; in the string
    &#8220;aaaaaaaaaaaaaaaaaaaaaaaaa&#8221; &#8212; so in the worst case we will still need (n *
    m) iterations. How do we overcome this?</p>

    <p>Let&#8217;s go back to the basic idea of the method &#8212; to replace the string
    comparison character by character by a comparison of two integers. In order
    to keep those integers small enough we have to use modular arithmetic. This
    causes a &#8220;side effect&#8221; &#8212; the mapping between strings and integers ceases
    to be unique. So now whenever the two integers are equal we still have to
    &#8220;confirm&#8221; that the two strings are identical by running
    character-by-character comparison. It can become a kind of vicious
    circle…</p>

    <p>The way to solve this problem is &#8220;rational gambling,&#8221; or the so called
    &#8220;double hash&#8221; technique. We &#8220;gamble&#8221; &#8212; whenever the hash values of two
    strings are equal, we assume that the strings are identical, and do not
    compare them character by character. To make the likelihood of a &#8220;mistake&#8221;
    negligibly small we compute for every string not one but two independent
    hash values based on different numbers B and M. If both are equal, we
    assume that the strings are identical. Sometimes even a &#8220;triple hash&#8221; is
    used, but this is rarely justifiable from a practical point of view.</p>

    <p>The &#8220;pure&#8221; form of &#8220;the needle in a haystack problem&#8221; is considered too
    straightforward and is rarely seen in programming challenges. However, the
    &#8220;rolling hash&#8221; technique used in RK is an important weapon. It is
    especially useful in problems where we have to look at all substrings of
    fixed length of a given text. An example is &#8220;the longest common substring
    problem&#8221;: given two strings find the longest string that is a substring of
    both. In this case, the combination of binary search (BS) and &#8220;rolling
    hash&#8221; works quite well. The important point that allows us to use BS is the
    fact that if the given strings have a common substring of length n, they
    also have at least one common substring of any length m &lt; n. And if the
    two strings do not have a common substring of length n they do not have a
    common substring of any length m &gt; n. So all we need is to run a BS on
    the length of the string we are looking for. For every substring of the
    first string of the length fixed in the BS we insert it in a hash table
    using one hash value as an index and a second hash value (&#8220;double hash&#8221;) is
    inserted in the table. For every substring of the fixed length of the
    second string, we calculate the corresponding two hash values and check in
    the table to see if they have been already seen in the first string. A hash
    table based on open addressing is very suitable for this task.</p>

    <p>Of course in &#8220;real life&#8221; (real challenges) the number of the given
    strings may be greater than two, and the longest substring we are looking
    for should not necessarily be present in all the given strings. This does
    not change the general approach.</p>

    <p>Another type of problems where the &#8220;rolling hash&#8221; technique is the key
    to the solution are those that ask us to find the most frequent substring
    of a fixed length in a given text. Since the length is already fixed we do
    not need any BS. We just use a hash table and keep track of the
    frequencies.</p>

    <p><span class="bodySubtitle">Knuth-Morris-Pratt Algorithm (KMP)</span><br />
    In some sense, the &#8220;naive&#8221; method and its extension RK reflect the standard
    approach of human logic to &#8220;the needle in a haystack problem&#8221;. The basic
    idea behind KMP is a bit different. Let&#8217;s suppose that we are able, after
    one pass through the text, to identify all positions where an existing
    match with the pattern ends. Obviously, this will solve our problem. Since
    we know the length of the pattern, we can easily identify the starting
    position of every match.</p>

    <p>Is this approach feasible? It turns out that it is, when we apply the
    concept of the automaton. We can think of an automaton as of a kind of
    abstract object, which can be in a finite number of states. At each step
    some information is presented to it. Depending on this information and its
    current state the automaton goes to a new state, uniquely determined by a
    set of internal rules. One of the states is considered as &#8220;final&#8221;. Every
    time we reach this &#8220;final&#8221; state we have found an end position of a
    match.</p>

    <p>The automaton used in KMP is just an array of &#8220;pointers&#8221; (which
    represents the &#8220;internal rules&#8221;) and a separate &#8220;external&#8221; pointer to some
    index of that array (which represents the &#8220;current state&#8221;). When the next
    character from the text is presented to the automaton, the position of the
    &#8220;external&#8221; pointer changes according to the incoming character, the current
    position, and the set of &#8220;rules&#8221; contained in the array. Eventually a
    &#8220;final&#8221; state is reached and we can declare that we have found a match.</p>

    <p>The general idea behind the automaton is relatively simple. Let us
    consider the string</p>

    <p><strong>A B A B A C</strong></p>

    <p>as a pattern, and let&#8217;s list all its prefixes:</p>

    <p><strong>0 /the empty string/<br />
    1 A<br />
    2 A B<br />
    3 A B A<br />
    4 A B A B<br />
    5 A B A B A<br />
    6 A B A B A C</strong></p>

    <p>Let us now consider for each such listed string (prefix) the longest
    proper suffix (a suffix different from the string itself), which is at the
    same time a prefix of it:</p>

    <p><strong>0 /the empty string/<br />
    1 /the empty string/<br />
    2 /the empty string/<br />
    3 A<br />
    4 A B<br />
    5 A B A<br />
    6 /the empty string/</strong></p>

    <p>It&#8217;s easy to see that if we have at some point a partial match up to say
    the prefix (A B A B A) we also have a partial match up to the prefixes (A B
    A), and (A) &#8211; which are both prefixes of the initial string and
    suffix/prefixes of the current match. Depending on the next &#8220;incoming&#8221;
    character from the text, three cases arise:</p>

    <ol>
        <li>The next character is C. We can &#8220;expand&#8221; the match at the level of
        the prefix (A B A B A). In this particular case this leads to a full
        match and we just notice this fact.</li>

        <li>The next character is B. The partial match for the prefix (A B A B
        A) cannot be &#8220;expanded&#8221;. The best we can do is to return to the largest
        different partial match we have so far &#8211; the prefix (A B A) and try to
        &#8220;expand&#8221; it. Now B &#8220;fits&#8221; so we continue with the next character from
        the text and our current &#8220;best&#8221; partial match will become the string (A
        B A B) from our &#8220;list of prefixes&#8221;.</li>

        <li>The &#8220;incoming&#8221; character is, for example, D. The &#8220;journey&#8221; back to
        (A B A) is obviously insufficient to &#8220;expand&#8221; the match. In this case
        we have to go further back to the second largest partial match (the
        second largest proper suffix of the initial match that is at the same
        time a prefix of it) &#8211; that is (A) and finally to the empty string (the
        third largest proper suffix in our case). Since it turns out that there
        is no way to &#8220;expand&#8221; even the empty string using the character D, we
        skip D and go to the next character from the text. But now our &#8220;best&#8221;
        partial match so far will be the empty string.</li>
    </ol>

    <p>In order to build the KMP automaton (or the so called KMP &#8220;failure
    function&#8221;) we have to initialize an integer array F[]. The indexes (from 0
    to m &#8211; the length of the pattern) represent the numbers under which the
    consecutive prefixes of the pattern are listed in our &#8220;list of prefixes&#8221;
    above. Under each index is a &#8220;pointer&#8221; &#8211; that identifies the index of the
    longest proper suffix, which is at the same time a prefix of the given
    string (or in other words F[i] is the index of next best partial match for
    the string under index i). In our case (the string A B A B A C) the array
    F[] will look as follows:</p>

    <p><strong>F[0] = 0<br />
    F[1] = 0<br />
    F[2] = 0<br />
    F[3] = 1<br />
    F[4] = 2<br />
    F[5] = 3<br />
    F[6] = 0</strong></p>

    <p>Notice that after initialization F[i] contains information not only
    about the largest next partial match for the string under index i but also
    about every partial match of it. F[i] is the first best partial match,
    F[F[i]] &#8211; is the second best, F[F[F[i]]] &#8211; the third, and so on. Using this
    information we can calculate F[i] if we know the values F[k] for all k &lt;
    i. The best next partial match of string i will be the largest partial
    match of string i &#8211; 1 whose character that &#8220;expands&#8221; it is equal to the
    last character of string i. So all we need to do is to check every partial
    match of string i &#8211; 1 in descending order of length and see if the last
    character of string i &#8220;expands&#8221; the match at this level. If no partial
    match can be &#8220;expanded&#8221; than F[i] is the empty string. Otherwise F[i] is
    the largest &#8220;expanded&#8221; partial match (after its &#8220;expansion&#8221;).</p>

    <p>In terms of pseudocode the initialization of the array F[] (the &#8220;failure
    function&#8221;) may look like this:</p>
    <pre class="code">
// Pay attention! 
// the prefix under index i in the table above is 
// is the string from pattern[0] to pattern[i - 1] 
// inclusive, so the last character of the string under 
// index i is pattern[i - 1]   

function build_failure_function(pattern[])
{
  // let m be the length of the pattern 

  F[0] = F[1] = 0; // always true
  
  for(i = 2; i &lt;= m; i++) {
    // j is the index of the largest next partial match 
    // (the largest suffix/prefix) of the string under  
    // index i - 1
    j = F[i - 1];
    for( ; ; ) {
      // check to see if the last character of string i - 
      // - pattern[i - 1] "expands" the current "candidate"
      // best partial match - the prefix under index j
      if(pattern[j] == pattern[i - 1]) { 
        F[i] = j + 1; break; 
      }
      // if we cannot "expand" even the empty string
      if(j == 0) { F[i] = 0; break; }
      // else go to the next best "candidate" partial match
      j = F[j];
    }
  }   
}
</pre>

    <p>The automaton consists of the initialized array F[] (&#8220;internal rules&#8221;)
    and a pointer to the index of the prefix of the pattern that is the best
    (largest) partial match that ends at the current position in the text
    (&#8220;current state&#8221;). The use of the automaton is almost identical to what we
    did in order to build the &#8220;failure function&#8221;. We take the next character
    from the text and try to &#8220;expand&#8221; the current partial match. If we fail, we
    go to the next best partial match of the current partial match and so on.
    According to the index where this procedure leads us, the &#8220;current state&#8221;
    of the automaton is changed. If we are unable to &#8220;expand&#8221; even the empty
    string we just skip this character, go to the next one in the text, and the
    &#8220;current state&#8221; becomes zero.</p>
    <pre class="code">
function Knuth_Morris_Pratt(text[], pattern[])
{
  // let n be the size of the text, m the 
  // size of the pattern, and F[] - the
  // "failure function"

  build_failure_function(pattern[]); 

  i = 0; // the initial state of the automaton is
         // the empty string

  j = 0; // the first character of the text
  
  for( ; ; ) {
    if(j == n) break; // we reached the end of the text

    // if the current character of the text "expands" the
    // current match 
    if(text[j] == pattern[i]) {
      i++; // change the state of the automaton
      j++; // get the next character from the text
      if(i == m) // match found
    }

    // if the current state is not zero (we have not
    // reached the empty string yet) we try to
    // "expand" the next best (largest) match
    else if(i &gt; 0) i = F[i];

    // if we reached the empty string and failed to
    // "expand" even it; we go to the next 
    // character from the text, the state of the
    // automaton remains zero
    else j++;
  }
}
</pre>

    <p>Many problems in programming challenges focus more on the properties of
    KMP&#8217;s &#8220;failure function,&#8221; rather than on its use for string matching. An
    example is: given a string (a quite long one), find all its proper suffixes
    that are also prefixes of it. All we have to do is just to calculate the
    &#8220;failure function&#8221; of the given string and using the information stored in
    it to print the answer.</p>

    <p>A typical problem seen quite often is: given a string find its shortest
    substring, such that the concatenation of one or more copies of it results
    in the original string. Again the problem can be reduced to the properties
    of the failure function. Let&#8217;s consider the string</p>

    <p><strong>A B A B A B</strong></p>

    <p>and all its proper suffix/prefixes in descending order:</p>

    <p><strong>1 A B A B<br />
    2 A B<br />
    3 /the empty string/</strong></p>

    <p>Every such suffix/prefix uniquely defines a string, which after being
    &#8220;inserted&#8221; in front of the given suffix/prefix gives the initial string. In
    our case:</p>

    <p><strong>1 A B<br />
    2 A B A B<br />
    3 A B A B A B</strong></p>

    <p>Every such &#8220;augmenting&#8221; string is a potential &#8220;candidate&#8221; for a string,
    the concatenation of several copies of which results in the initial string.
    This follows from the fact that it is not only a prefix of the initial
    string but also a prefix of the suffix/prefix it &#8220;augments&#8221;. But that means
    that now the suffix/prefix contains at least two copies of the &#8220;augmenting&#8221;
    string as a prefix (since it&#8217;s also a prefix of the initial string) and so
    on. Of course if the suffix/prefix under question is long enough. In other
    words, the length of a successful &#8220;candidate&#8221; must divide with no remainder
    the length of the initial string.</p>

    <p>So all we have to do in order to solve the given problem is to iterate
    through all proper suffixes/prefixes of the initial string in descending
    order. This is just what the &#8220;failure function&#8221; is designed for. We iterate
    until we find an &#8220;augmenting&#8221; string of the desired length (its length
    divides with no remainder the length of the initial string) or get to the
    empty string, in which case the &#8220;augmenting&#8221; string that meets the above
    requirement will be the initial string itself.</p>

    <p><span class="bodySubtitle">Rabin-Karp and Knuth-Morris-Pratt at
    TopCoder</span><br />
    In the problem types mentioned above, we are dealing with relatively &#8220;pure&#8221;
    forms of RK, KMP and the techniques that are the essence of these
    algorithms. While you&#8217;re unlikely to encounter these pure situations in a
    TopCoder SRM, the drive towards ever more challenging TopCoder problems can
    lead to situations where these algorithms appear as one level in complex,
    &#8220;multilayer&#8221; problems. The specific input size limitations favor this
    trend, since we will not be presented as input with multimillion character
    strings, but rather with a &#8220;generator&#8221;, which may be by itself algorithmic
    in nature. A good example is &#8220;<a href="http://community.topcoder.com/stat?c=problem_statement&amp;pm=6017&amp;rd=8083">InfiniteSoup</a>,&#8221;
    Division 1 &#8211; Level Three, SRM 286.</p>
    <p>

    
<style>

.formFrame { background: #f5f5f5; margin: auto; }.formFrame td { border: 1px solid #ccc; padding: 5px; }.sideNote {background: #f5f5f5; margin: 15px; padding: 15px; border: 1px solid #eee;}pre {background: #f5f5f5; margin: 15px; padding: 15px; border: 1px solid #eee; overflow: scroll;}p{padding-bottom:0 !important;}

</style>					

						<!-- /.pageContent -->

					</div>
					<!-- /.mainStream -->

					<aside class="sideStream  grid-1-3">
								<div class="textwidget"><div style="display: inline-block; width: 320px; height: 44px; overflow: hidden; background-color: #f1f1f1; padding:5px;">
           <p style="padding-top: 12px; padding-left: 7px; font-size: 22px">
    More Resources</p>
       </div>


	  <br />
<p style="padding-top: 12px; padding-left: 10px; line-height: 150%"><a href="http://www.topcoder.com/community/data-science/data-science-tutorials/">Member Tutorials </a><br />
Read more than 40 data science tutorials written by topcoder members. </p>
<p style="padding-top: 12px; padding-left: 10px; line-height: 150%"><a href="http://www.topcoder.com/community/data-science/data-science-editorials/">Problem Set Analysis </a><br />
Read editorials explaining the problem and solution for each Single Round Match (SRM). </p>
<p style="padding-top: 12px; padding-left: 10px; line-height: 150%"><a href="http://www.topcoder.com/community/data-science/getting-started-in-data-science/">
Data Science Guide</a><br />
New to topcoder's data science track? Read this guide for an overview on how to get started in the arena and how competitions work.</p>
<p style="padding-top: 12px; padding-left: 10px; line-height: 150%"><A href="http://help.topcoder.com">Help Center </a><br />
Need specifics about the process or the rules? Everything you need to know about competing at topcoder can be found in the Help Center.</p>
<p style="padding-top: 12px; padding-left: 10px; line-height: 150%"><a href="http://apps.topcoder.com/forums/">Member Forums</a> <br />
Join your peers in our member forums and ask questions from the real experts - topcoder members!</p>
</div>
							</aside>

					<!-- /.sideStream -->
					<div class="clear"></div>
				</div>
				<!-- /.rightSplit -->
			</div>
		</article>
		<!-- /#mainContent -->
<footer class="bottom-footer">
  <!-- Footer links -->
  <nav class="menu-item">
    <div class="menu-item-header show-small">OTHERS</div>
    <ul class="submenu">
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="/sitemap" class="menu-link">SITEMAP</a></li>
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="/about" class="menu-link">ABOUT US</a></li>
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="/contact-us" class="menu-link">CONTACT US</a></li>
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="http://help.topcoder.com" target="_blank" class="menu-link">HELP CENTER</a></li>
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="http://topcoder.com/community/how-it-works/privacy-policy/" class="menu-link">PRIVACY POLICY</a></li>
      <li class="submenu-item"><a ng-click="$event.stopPropagation();" href="http://topcoder.com/community/how-it-works/terms/" class="menu-link">TERMS</a></li>
    </ul>
    <!-- Social links -->
  </nav>
  <div class="social-links">
    <p>Topcoder is also on</p><a href="https://www.facebook.com/topcoder" target="fbwindow" class="fb-link"></a><a href="http://www.twitter.com/topcoder" target="twwindow" class="twitter-link"></a><a href="https://www.linkedin.com/company/topcoder" target="liwindow" class="linkedin-link"></a><a href="https://plus.google.com/u/0/b/104268008777050019973/104268008777050019973/posts" target="gpwindow" class="google-link"></a>
  </div>
  <p class="copyright-notice">© 2016 Topcoder. All Rights Reserved</p>
</footer>
</div>
<!-- /.content -->
</div>
<!-- /#wrapper -->


<div id="bgModal"></div><!-- background modal -->
<div id="bgOverlapModal"></div><!-- background modal -->
<div id="bgLoadingModal"><span></span></div><!-- background loading -->
<div id="thanks" class="modal">
  <a href="javascript:;" class="closeBtn closeModal"></a>

  <div class="content">
    <h2>Thanks for joining!</h2>

    <p>We have sent you an email with activation instructions.<br/>If you do not receive that email within 1 hour,
      please email <a href="mailto:support@topcoder.com">support@topcoder.com</a>.</p>

    <div>
      <a href="javascript:;" class="btn closeModal redirectOnConfirm">Close</a>
    </div>
  </div>
</div><!-- END #thanks -->
<div id="registerSuccess" class="modal">
  <a href="javascript:;" class="btnClose closeModal"></a>
  <div class="content">
    <h2>Registered!</h2>
    <p class="success">Thank you for registering. You may now download the challenge files and participate in the challenge forums.</p>
    <p class="submitBtn">
      <a class="btn closeModalReg" href="javascript:;">OK</a>
    </p>
  </div>
</div><!-- END #registerSuccess -->
<div id="registerFailed" class="modal">
  <a href="javascript:;" class="btnClose closeModal"></a>
  <div class="content">
    <h2>Info</h2>
    <p class="failedMessage"></p>
    <p class="submitBtn">
      <a class="btn closeModal" href="javascript:;">OK</a>
    </p>
  </div>
</div><!-- END #registerFailed -->

<div id="showSubmission" class="modal">
    <a href="javascript:;" class="btnClose closePopupModal"></a>
    <div class="content">
       <img alt="" style="width:910px; height:850px">
    </div>
</div><!-- END #show submission -->

<div id="filterSavedSuccess" class="modal">
  <a href="javascript:;" class="btnClose closeModal"></a>
  <div class="content">
    <h2>Success</h2>
    <p class="success">Your filters have been saved and stored in the "My Filters" dropdown list.</p>
    <p class="submitBtn">
      <a class="btn closeModal" href="javascript:;">OK</a>
    </p>
  </div>
</div><!-- END #filterSavedSuccess -->

<div id="filterSavedFailed" class="modal">
  <a href="javascript:;" class="btnClose closeModal"></a>
  <div class="content">
    <h2>Info</h2>
    <p class="failedMessage"></p>
    <p class="submitBtn">
      <a class="btn closeModal" href="javascript:;">OK</a>
    </p>
  </div>
</div><!-- END #filterSavedFailed -->

<div id="designSubmissionCommentExample" class="modal">
  <a href="javascript:;" class="btnClose closeModal"></a>
  <div class="content">
    <h2>Comment Examples</h2>

    <strong>Example 1:</strong><br>
    The logo represents movement and "taking action" rather than being stagnant.
    The colors I chose signify power and give the brand a strong feel.<br><br>

    <strong>Example 2:</strong><br>
    This is a revised version of my previous submission. Changes include a new
    header graphic, new font choices for the pop-up box and new icons for the
    widget on the fourth page.<br><br>

    <strong>Example 3:</strong><br>
    This is my Round 2 submission. I have implemented all of the feedback you
    gave me after Round 1 and I hope you like the changes.<br><br>
  </div>
</div><!-- END #show submission -->

<div id="typeTooltip" class="tooltip hide">
  <div class="inner">
    <header></header>
    <div class="data">
      <p class="contestTy"></p>
    </div>
    <div class="arrow"></div>
  </div>
</div><!-- /.tooltip -->
<div id="winnerTooltip" class="tooltip hide">
  <div class="inner">
    <header></header>
    <div class="data">
      <div class="winnerInfo"></div>
    </div>
    <div class="arrow alt"></div>
  </div>
</div><!-- /.tooltip -->
<div id="badgeTooltip" class="tooltip hide">
  <div class="inner">
    <header></header>
    <div class="data">
      <p class="earnedOn"></p>
    </div>
    <div class="data">
      <p class="currentlyEarned"><span></span></p>
    </div>
    <div class="arrow"></div>
  </div>
</div><!-- /.tooltip -->
<link rel='stylesheet' id='ng-grid-css'  href='//cdnjs.cloudflare.com/ajax/libs/ng-grid/2.0.10/ng-grid.css?ver=3.9.1' type='text/css' media='all' />
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/TcApi-hookup/includes/js/Selectyze.jquery.js'></script>
<script type='text/javascript' src='https://www.topcoder.com/wp-content/plugins/TcApi-hookup/includes/js/tcapi.js'></script>
<script type='text/javascript' src='//ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js'></script>
<script type='text/javascript' src='//cdn.auth0.com/w2/auth0-1.6.4.js'></script>
<script type='text/javascript' src='https://www.topcoder.com/mf/dist/js/default.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.15/angular.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.15/angular-animate.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.15/angular-route.min.js'></script>
<script type='text/javascript' src='https://www.topcoder.com/wp-includes/js/underscore.min.js?ver=1.6.0'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/restangular/1.4.0/restangular.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/ng-grid/2.0.10/ng-grid.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/ng-grid/2.0.10/ng-grid-flexible-height.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.15/angular-cookies.min.js'></script>
<script type='text/javascript' src='//cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.10/angular-ui-router.min.js'></script>
<script>
  window.prerenderReady = false;
  function getParameterByName(name, source) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
    results = regex.exec(source || location.search);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }
  function getHashParameterByName(name, source) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\#&]" + name + "=([^&#]*)"),
    results = regex.exec(source || location.hash);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
  }
</script>


<!-- START Marketo Code -->
<script type="text/javascript">
document.write(unescape("%3Cscript src='//munchkin.marketo.net/munchkin.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script>Munchkin.init('921-UOU-112', {"wsInfo":"jFRS"});</script>
<!-- END Marketo Code -->

<!-- START Google Retargeting Marketing Code -->
<script type="text/javascript">
adroll_adv_id = "LOUA2FVRTJDYZC2BMX72Z7";
adroll_pix_id = "4XU6H3BYL5EQBFHZM4DIUU";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
<!-- END Google Retargeting Marketing Code -->


<!-- START Twitter Marketing Code -->
<script src="//platform.twitter.com/oct.js" type="text/javascript"></script>
<script type="text/javascript">
twttr.conversion.trackPid('l4r4k');
</script>
<noscript>
<img height="1" width="1" style="display:none;" alt="" src="https://analytics.twitter.com/i/adsct?txn_id=l4r4k&p_id=Twitter" />
<img height="1" width="1" style="display:none;" alt="" src="//t.co/i/adsct?txn_id=l4r4k&p_id=Twitter" />
</noscript>
<!-- END Twitter Marketing Code -->

<!-- START KISSmetrics -->
<script type="text/javascript">var _kmq = _kmq || [];
var _kmk = _kmk || 'aa23cd43c455ef33b6a0df3de81a79af9ea30f75';
function _kms(u){
  setTimeout(function(){
    var d = document, f = d.getElementsByTagName('script')[0],
    s = d.createElement('script');
    s.type = 'text/javascript'; s.async = true; s.src = u;
    f.parentNode.insertBefore(s, f);
  }, 1);
}
_kms('//i.kissmetrics.com/i.js');
_kms('//doug1izaerwt3.cloudfront.net/' + _kmk + '.1.js');
</script>
<!-- END KISSmetrics -->

<script>
(function() {
  var headerApp = angular.module('tc.header', [])
  headerApp.directive('ngHeaderBootstrap', function(){
    return {
      restrict: 'C',
      templateUrl: tcconfig.mainURL + '/mf/js/app/header/partials/header-nav.html',
      controller: function($scope, $timeout){
        $scope.vm = vm = {};
        $scope.main = {};
        $scope.main.menuVisible = false;
        vm.isAuth = false;

        if (app.isLoggedIn()) {
          vm.isAuth = true;
          app.getHandle(function(handle) {
            $.get(tcconfig.apiURL + '/users/' + handle, function(data) {
              var photoLink = data['photoLink'];
              if (photoLink) {
                if (photoLink.indexOf('//') == -1) {
                  photoLink = tcconfig.communityURL + data['photoLink']
                }
              } else {
                photoLink = tcconfig.communityURL + '/i/m/nophoto_login.gif';
              }
              
              var color = '';
              var ratings = data['ratingSummary'];
              if (ratings) {
                var maxRating = 0;
                for (var i = 0; i < ratings.length; i++) {
                  if (maxRating < ratings[i]['rating']) {
                    maxRating = ratings[i]['rating'];
                    color = ratings[i]['colorStyle'].split(": ")[1];
                  }
                }
              } else if (data['isPM'] == true) {
                color = '#FF9900';
              }
              
              $timeout(function() {
                vm.handleStyle = { color: color };
                vm.photoURL = photoLink;
              });
            });

            $timeout(function() {
              vm.userHandle = handle;
              vm.userMenu = [
                { 'href': '/my-dashboard', 'text': 'DASHBOARD', 'icon': '/mf/i/nav/dashboard.svg' },
                { 'href': '/members/' + handle, 'text': 'MY PROFILE', 'icon': '/mf/i/nav/profile.svg' },
                { 'href': 'https:' + tcconfig.communityURL + '/PactsMemberServlet?module=PaymentHistory&full_list=false', 'text': 'PAYMENTS', 'icon': '/mf/i/nav/wallet.svg' },
                { 'href': '/settings/profile', 'text': 'SETTINGS', 'icon': '/mf/i/nav/settings.svg' },
              ];
            });
          });
        }

        vm.menuHeaders = [ 'compete', 'learn', 'community' ];
        vm.menuLinks =
        {
          'compete': [
              { 'href':  "/challenges/design/active/?pageIndex=1", 'text': 'DESIGN CHALLENGES', 'icon': '/mf/i/nav/track-design.svg' },
              { 'href':  "/challenges/develop/active/?pageIndex=1", 'text': 'DEVELOPMENT CHALLENGES', 'icon': '/mf/i/nav/track-develop.svg' },
              { 'href':  "/challenges/data/active/?pageIndex=1", 'text': 'DATA SCIENCE CHALLENGES', 'icon': '/mf/i/nav/track-data.svg' },
              { 'href':  'https:' + tcconfig.arenaURL, 'text': 'COMPETITIVE PROGRAMMING', 'icon': '/mf/i/nav/track-cp.svg', 'target': '_blank' },
          ],
          'learn': [
              { 'href': '/getting-started/', 'text': 'GETTING STARTED', 'icon': '/mf/i/nav/rocket.svg' },
              { 'href': '/community/design/', 'text': 'DESIGN', 'icon': '/mf/i/nav/book-design.svg' },
              { 'href': '/community/development/', 'text': 'DEVELOPMENT', 'icon': '/mf/i/nav/book-develop.svg' },
              { 'href': '/community/data-science/', 'text': 'DATA SCIENCE', 'icon': '/mf/i/nav/book-data.svg' },
              { 'href': '/community/competitive%20programming/', 'text': 'COMPETITIVE PROGRAMMING', 'icon': '/mf/i/nav/book-cp.svg' },
          ],
          'community': [
              { 'href': '/community/members/', 'text': 'OVERVIEW', 'icon': '/mf/i/nav/members.svg' },
              { 'href': '/community/member-programs/', 'text': 'PROGRAMS', 'icon': '/mf/i/nav/programs.svg' },
              { 'href': 'https://' + tcconfig.forumsAppURL, 'text': 'FORUMS', 'icon': '/mf/i/nav/forums.svg' },
              { 'href': '/community/statistics/', 'text': 'STATISTICS', 'icon': '/mf/i/nav/statistics.svg' },
              { 'href': '/community/events/', 'text': 'EVENTS', 'icon': '/mf/i/nav/events.svg' },
              { 'href': '/blog/', 'text': 'BLOG', 'icon': '/mf/i/nav/blog.svg' }
          ]
        };

        vm.checkSubmit = function(ev) {
          if (ev.keyCode === 13)
            window.location.replace(tcconfig.mainURL + '/search?s=' + vm.searchTerm + '&scope=member');
        }

        vm.isActive = function(href) {
          if (window.location.pathname == href)
            return true;
          return false;
        }

        vm.login = function() {
          window.location.href = "/login?next=" + encodeURIComponent(window.location.href);
        }

        vm.logout = function() {
          document.cookie = 'tcsso=; path=/; domain=.' + tcconfig.domain + '; expires=' + new Date(0).toUTCString();
          document.cookie = 'tcjwt=; path=/; domain=.' + tcconfig.domain + '; expires=' + new Date(0).toUTCString();
          main.menuVisible = vm.isAuth = false;
          window.location.href = '/logout';
        }
      }
    };
  });

  angular.bootstrap($('.ng-header-bootstrap'), ['tc.header']);
})();
</script>

</div>

<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"496af5ee90","applicationID":"5697815","transactionName":"ZlcBbBQAChBSARIKXV8dIlsSCAsNHBYDDkJdUxddSw4SBkEUDwZFHEUKXAEEEApJBwI=","queueTime":0,"applicationTime":83,"atts":"ShACGlwaGR4=","errorBeacon":"bam.nr-data.net","agent":""}</script></body>

</html>
